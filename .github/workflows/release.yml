name: Release & Deploy (tag)

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Lấy tên tag (vd: v1.0.3)
      - name: Extract tag
        id: vars
        run: echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      # Ép lowercase owner/repo và tạo đường dẫn image GHCR (tất cả lowercase)
      - name: Prepare lowercase image names
        run: |
          OWNER="${GITHUB_REPOSITORY%/*}"
          REPO="${GITHUB_REPOSITORY#*/}"
          OWNER_LC="$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')"
          REPO_LC="$(echo "$REPO"   | tr '[:upper:]' '[:lower:]')"
          echo "IMAGE_PHP=ghcr.io/${OWNER_LC}/${REPO_LC}/app-php" >> $GITHUB_ENV
          echo "IMAGE_NGINX=ghcr.io/${OWNER_LC}/${REPO_LC}/app-nginx" >> $GITHUB_ENV

          # Kiểm tra không còn chữ hoa
          echo "PHP image: $IMAGE_PHP"
          echo "NGX image: $IMAGE_NGINX"
          if echo "$IMAGE_PHP$IMAGE_NGINX" | grep -q '[A-Z]'; then
            echo "Image path still has uppercase!"; exit 1; fi

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push PHP-FPM
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/docker/php-fpm/Dockerfile
          push: true 
          tags: ${{ env.IMAGE_PHP }}:${{ steps.vars.outputs.TAG }}

      - name: Build & Push Nginx
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/docker/nginx/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NGINX }}:${{ steps.vars.outputs.TAG }}

      # Copy docker-compose file to server
      - name: Copy docker-compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: ${{ secrets.DO_PORT || 22 }}
          source: "docker-compose.prod.yml"
          target: "/opt/my-laravel/"
          timeout: 60s
          command_timeout: 30m

      # Deploy to DigitalOcean
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          port: ${{ secrets.DO_PORT || 22 }}
          timeout: 60s
          command_timeout: 30m
          script: |
            # Login to GHCR
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Pull latest images
            docker pull ${{ env.IMAGE_PHP }}:${{ steps.vars.outputs.TAG }}
            docker pull ${{ env.IMAGE_NGINX }}:${{ steps.vars.outputs.TAG }}
            
            # Stop existing containers
            docker-compose -f /opt/my-laravel/docker-compose.prod.yml down || true
            
            # Update docker-compose.prod.yml with new image tags
            sed -i "s|ghcr.io/.*/app-php:.*|${{ env.IMAGE_PHP }}:${{ steps.vars.outputs.TAG }}|g" /opt/my-laravel/docker-compose.prod.yml
            sed -i "s|ghcr.io/.*/app-nginx:.*|${{ env.IMAGE_NGINX }}:${{ steps.vars.outputs.TAG }}|g" /opt/my-laravel/docker-compose.prod.yml
            
            # Start new containers
            docker-compose -f /opt/my-laravel/docker-compose.prod.yml up -d
            
            # Clean up old images
            docker image prune -f
